Plugins automatically reload on save.  You can edit your plugin's
code right in sublime and try out your changes immediately.  It's
an amazingly satisfying environment.


At a bare minimum, all programming environments need logging output.
Sublime outputs python print statements to the python console.
  print "Selection: " + repr(view.sel())


Open a console and paste this in to have every command printed:
  sublime.log_commands(True)


To print the current syntax file:
  view.settings().get('syntax')
And the syntax scope / theme selector:
  view.syntax_name(view.sel()[0].begin())
  sublime.set_clipboard(view.syntax_name(view.sel()[0].a))
  OR just hit Control-Shift-P


How are settings found?

  AT EACH STEP ignore packages listed in ignored_packages
  Global Settings
  Package Settings   -- Vintage/Preferences.sublime-settings
  Platform Settings  -- Vintage/Preferences (OSX).sublime-settings
  User Settings      -- User/Preferences.sublime-settings


To restore Sublime to stock to see if an extension or user config
is screwing with functionality:   http://www.sublimetext.com/docs/2/revert.html
  quit Sublime
  mv '~/Library/Application Support/Sublime Text 2' '~/Library/Application Support/DISABLED'
  run Sublime
When you're done, to put everything back the way it was:
  quit Sublime
  rm -rf '~/Library/Application Support/Sublime Text 2'
  mv '~/Library/Application Support/DISABLED' '~/Library/Application Support/Sublime Text 2'
  run Sublime


OK, starting to understand why my TrailingSpaces settings aren't taking effect.
  https://github.com/SublimeText/TrailingSpaces/issues/12
Plugins can read settings two ways: read from User/Preferences.sublime-settings
the way Vintage does, or read from User/PACKAGE.sublime-settings
the way TrailingSpaces does.  It's totally up to the plugin.
  Vintage: view.settings(...)
  TrailingSpaces: sublime.load_settings('trailing_spaces.sublime-settings')
This is unfortunate.  I wish all plugins would read settings from the
view so that they're less restricted with where settings can come from.


Packages/Default/*.sublime-keymap  (then platform)
PKG/*.sublime-keymap   (then platform)
Packages/User/*.sublime-keymap (then platform)



==== Colors and Appearance

The difference between a theme and a color scheme is very strange at first.
Color scheme only affects file highlighting.  Theme affects the rest of the
window: icons, sidebar, tabs, etc.  You can switch a color scheme at any
time but you must restart sublime after switching a theme.

Color schemes that claim to be themes (https://github.com/chriskempson/tomorrow-theme)
don't help things.

Not real enthused with Soda Dark... the filenames in the sidebar are hardly readable.


To see what version of python you're using: import sys; print sys.version
